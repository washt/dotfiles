"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("mocha");
const chai_1 = require("chai");
const solargraph = require("../index");
suite('Server', () => {
    let configuration = new solargraph.Configuration();
    let server = new solargraph.Server(configuration);
    it('starts', (done) => {
        chai_1.expect(server.isRunning()).to.equal(false);
        server.start().then(() => {
            chai_1.expect(server.isRunning()).to.equal(true);
        }).then(done, done);
    });
    /*it('restarts', (done) => {
        server.restart().then(() => {
            expect(server.isRunning()).to.equal(true);
        }).then(done, done);
    });*/
    it('returns suggestions', (done) => {
        server.suggest('String.n', 0, 7, 'file.rb').then((response) => {
            chai_1.expect(response['suggestions'].length).to.be.above(0);
        }).then(done, done);
    });
    it('returns hover info', (done) => {
        server.hover('String', 0, 1, 'file.rb').then((response) => {
            chai_1.expect(response['suggestions'].length).to.be.above(0);
        }).then(done, done);
    });
    it('returns signature info', (done) => {
        server.signify('String.new()', 0, 11, 'file.rb').then((response) => {
            chai_1.expect(response['suggestions'].length).to.be.above(0);
        }).then(done, done);
    });
    it('stops', () => {
        server.stop();
        chai_1.expect(server.isRunning()).to.equal(false);
    });
});
//# sourceMappingURL=index.test.js.map